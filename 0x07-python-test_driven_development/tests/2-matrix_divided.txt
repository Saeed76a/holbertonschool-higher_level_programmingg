==============================
How to use 2-matrix_divided.py
==============================

This is an example text file in reStructuredText format.  First import
``matrix_divided`` from the ``2-matrix_divided`` module:

1) Import file 
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

It is a matrix
>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]

if the matrix is None:
>>> matrix_divided(None)
Traceback (most recent call last):
    ...
TypeError: matrix_divided() missing 1 required positional argument: 'div'

    
Division matrix
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

matix has to exist, can't be less or equal to 0
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
	...
ZeroDivisionError: division by zero

Matrix division with floats
>>> matrix_divided(matrix, 3.14)
[[0.32, 0.64, 0.96], [1.27, 1.59, 1.91]]

>>> matrix_divided([["abc", "def"],[5, 6]], 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, 2, 3],[4, 5, 6]], "a")
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix_divided(1234, 9)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([["abc", "def"],[5, 6]], 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(1234, 9)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
















